
#user http; # 工作进程的属主
worker_processes  1; # 工作进程数，一般与 CPU 核数等同

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll; #Linux 下性能最好的 event 模式
    worker_connections  1024; # 每个工作进程允许最大的同时连接数
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

    # 上传进度
    upload_progress proxied 5m;
    upload_progress_json_output;


    server {
        listen       81;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # Jian
    upstream frontends {
        server 127.0.0.1:8888;
    }
    server {
        listen 80;
        client_max_body_size 1000M;


        # Upload form should be submitted to this location
        location /upload {
            # Pass altered request body to this location
            #upload_pass   @test;
            upload_pass /appliance/upload;
    
            # Store files to this directory
            # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
            #upload_store /tmp 1;
            upload_store /opt/LuoYun/upload;
            
            # Allow uploaded files to be read only by user
            upload_store_access user:r;
    
            upload_limit_rate 50k; # 设定上传速度上限

            # Set specified fields in request body
            upload_set_form_field "${upload_field_name}_name" "$upload_file_name";
            upload_set_form_field "${upload_field_name}_content_type" "$upload_content_type";
            upload_set_form_field "${upload_field_name}_path" "$upload_tmp_path";
    
            # Inform backend about hash and size of a file
            upload_aggregate_form_field "${upload_field_name}_md5" "$upload_file_md5";
            upload_aggregate_form_field "${upload_field_name}_size" "$upload_file_size";
    
            upload_pass_form_field "^submit$|^description$";
    
            upload_cleanup 400 404 499 500-505;

            #upload_pass_args on; # 把前端脚本请求的参数会传给后端的脚本语言

            track_uploads proxied 30s; # 上传进度
        }
    
        # Pass altered request body to a backend
        location @test {
            proxy_pass   http://frontends;
        }

        location ^~ /progress {
            report_uploads proxied;    #GET此地址得到上传进度
        }

        location /static/ {
            root "/opt/LuoYun/lyweb2/";
            if (-f $request_filename) {
                rewrite ^/static/(.*)$  /static/$1 break;
            }
        }

        location /dl/appliance/ {
            root "/opt/LuoYun/appliance/";
            rewrite ^/dl/appliance/(.*)$ /$1 break;
        }

        location / {
            proxy_read_timeout 1800;
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://frontends;
        }

    }


    # Jian
    upstream ylinux {
        server 127.0.0.1:8000;
    }
    server {
        listen 82;
        location / {
            proxy_read_timeout 1800;
            proxy_pass_header Server;
            proxy_set_header Host $http_host;
            proxy_redirect off;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Scheme $scheme;
            proxy_pass http://ylinux;
        }
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
